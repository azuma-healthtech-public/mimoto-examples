package com.mimoto.example.gematikmock.data;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public final class Constants {
    public final static List<AvailableUser> AVAILABLE_USERS;
    public final static List<String> AVAILABLE_SCOPE_DECLINES;
    public final static int DEFAULT_USER_INDEX;

    static {
        AVAILABLE_SCOPE_DECLINES = new ArrayList<String>();
        AVAILABLE_SCOPE_DECLINES.add("Remove claims");
        AVAILABLE_SCOPE_DECLINES.add("Add empty claims");

        List<AvailableUser> users = new ArrayList<AvailableUser>();
         users.add(new AvailableUser("Ditte Weitzenböck", "P179293933"));
        users.add(new AvailableUser("Jenni van den Berge", "D700912910"));
        users.add(new AvailableUser("Karyn Friderich", "R302790019"));
        users.add(new AvailableUser("Trajan Jammal", "Q182922835"));
        users.add(new AvailableUser("Kim Hölder", "V093547111"));
        users.add(new AvailableUser("Antje Dürrwächter", "C281555914"));
        users.add(new AvailableUser("Dorine Erner", "B055779708"));
        users.add(new AvailableUser("Mohammed Dominé", "Q166734178"));
        users.add(new AvailableUser("Edmund Moning", "G443503375"));
        users.add(new AvailableUser("Ulrike Eliane Ransbach", "V244746634"));
        users.add(new AvailableUser("Charlotta Lattuada", "I467763428"));
        users.add(new AvailableUser("Fiorina Friederici", "U449298563"));
        users.add(new AvailableUser("Metin Urfer", "S382572117"));
        users.add(new AvailableUser("Claudius Höttl", "N040297359"));
        users.add(new AvailableUser("Toussaint Wieluch", "K426342987"));
        users.add(new AvailableUser("Nola Sklenar", "Q540409956"));
        users.add(new AvailableUser("Alanis Bárbara Blübaum", "H981445490"));
        users.add(new AvailableUser("Filomena Obermöller", "V251504961"));
        users.add(new AvailableUser("Karl-August Oehmen", "W215342165"));
        users.add(new AvailableUser("Liva Lubitsch", "G049950590"));
        users.add(new AvailableUser("Peter-Heinz Matthaei", "P902003569"));
        users.add(new AvailableUser("Olcay Kilian Mazingu", "V302252889"));
        users.add(new AvailableUser("Ferdinande Castan", "V201219306"));
        users.add(new AvailableUser("Valer Klaschka", "P815185265"));
        users.add(new AvailableUser("Addi Gürschner", "C420797647"));
        users.add(new AvailableUser("Dietmar-Maria Budar", "Y587922235"));
        users.add(new AvailableUser("Eugenius Reuth", "F775922310"));
        users.add(new AvailableUser("Bertrand von dem Busche", "A100194533"));
        users.add(new AvailableUser("Adelajda Fedel", "V505397576"));
        users.add(new AvailableUser("Anniko Lorch", "E486966741"));
        users.add(new AvailableUser("Hannah-Lene Gottschlag", "H697855495"));
        users.add(new AvailableUser("Ilkay Paul-Henri Steinhaeusser", "Q667805974"));
        users.add(new AvailableUser("Johann Peter Abramowitsch", "V641677638"));
        users.add(new AvailableUser("Vitalis Erdle", "P013510746"));
        users.add(new AvailableUser("Benedict Wansing", "S453483606"));
        users.add(new AvailableUser("Dieprand Edwards", "I717558212"));
        users.add(new AvailableUser("James Eschebach", "H326802330"));
        users.add(new AvailableUser("Gunna Tatge", "L338249593"));
        users.add(new AvailableUser("Damaris R. Labbadia", "B682829223"));
        users.add(new AvailableUser("Marguerite Ambacher", "Q952468480"));
        users.add(new AvailableUser("Fridtjof Schrader", "H898891253"));
        users.add(new AvailableUser("Berchtold Görtz-Wrisberg", "J671009964"));
        users.add(new AvailableUser("Vitaly Zeitlhofer", "P262640440"));
        users.add(new AvailableUser("Göran Kreppel", "F173976809"));
        users.add(new AvailableUser("Loraine Jaks", "Z082897409"));
        users.add(new AvailableUser("Eren Krückels", "Y562679673"));
        users.add(new AvailableUser("Marielle Raffington", "I669655261"));
        users.add(new AvailableUser("Eniola Opocensky", "T957299847"));
        users.add(new AvailableUser("Beat Bourbon", "T647210097"));
        users.add(new AvailableUser("Yannick Mederow", "Z991878029"));
        users.add(new AvailableUser("Joris Eidams", "P465620102"));
        users.add(new AvailableUser("Annalise Baeyer", "Y279331467"));
        users.add(new AvailableUser("Sébastien Zinner", "J828745429"));
        users.add(new AvailableUser("Tanya Zade", "X109219663"));
        users.add(new AvailableUser("Kreszentia Tramp", "W407506181"));
        users.add(new AvailableUser("Kerstin Dincer", "Y878467647"));
        users.add(new AvailableUser("Thorn Schetelich", "Y140780385"));
        users.add(new AvailableUser("Roswitha Feldmüller", "B607260514"));
        users.add(new AvailableUser("Sandeep Keuning", "J023079865"));
        users.add(new AvailableUser("Mimi Zähler", "U775088893"));
        users.add(new AvailableUser("S. Neda Edmond", "K415576841"));
        users.add(new AvailableUser("Anton Winch", "W767484199"));
        users.add(new AvailableUser("Flockina Klüwer", "R393432008"));
        users.add(new AvailableUser("Joe Scharfenorth", "E713244682"));
        users.add(new AvailableUser("Pál Koke", "T592799571"));
        users.add(new AvailableUser("Farah Anding", "L102540837"));
        users.add(new AvailableUser("Hi?u Breitschuh", "W425928744"));
        users.add(new AvailableUser("Szymon Hollwitz", "E148859908"));
        users.add(new AvailableUser("Kristina Hohoff", "C638490876"));
        users.add(new AvailableUser("Cerstin von Brandenstein", "V011369859"));
        users.add(new AvailableUser("Jan Kaempfer", "L066580825"));
        users.add(new AvailableUser("Ricki Braunbeck", "Z176485410"));
        users.add(new AvailableUser("Laurence Furkel", "H398359336"));
        users.add(new AvailableUser("Massimiliano Wessinghage", "K162056932"));
        users.add(new AvailableUser("Margarita Schwentke", "D511048538"));
        users.add(new AvailableUser("Nick Mross", "T760585824"));
        users.add(new AvailableUser("Celestyn Schickinger", "M651641459"));
        users.add(new AvailableUser("Burim Geizkofler", "V681583551"));
        users.add(new AvailableUser("Juan Sebastián Kijewski", "E989497313"));
        users.add(new AvailableUser("Carola Stendel", "X243401989"));
        users.add(new AvailableUser("Janina Blaum", "F635889269"));
        users.add(new AvailableUser("Magda Cain", "F553092322"));
        users.add(new AvailableUser("Ernie Eickelberg", "V543033393"));
        users.add(new AvailableUser("Jules Seeckt", "G839948921"));
        users.add(new AvailableUser("Thankmar Niggeloh", "R750102863"));
        users.add(new AvailableUser("Lipót Wehrenberg", "I787698581"));
        users.add(new AvailableUser("Zofia Geers", "J817104097"));
        users.add(new AvailableUser("Scarlet Monika Fauth", "B622820702"));
        users.add(new AvailableUser("Hildur Fürsich", "O018753325"));
        users.add(new AvailableUser("Substantial Sso", "O018753337"));
        users.add(new AvailableUser("Yaroslav Passy", "H253024332"));
        users.add(new AvailableUser("Paul-Werner Aslan Börner", "Y581099434"));
        users.add(new AvailableUser("Margriet Hitzing", "Z129727266"));
        users.add(new AvailableUser("Iradj von Hattstein", "E970401245"));
        users.add(new AvailableUser("Kay Kalt", "N450568022"));
        users.add(new AvailableUser("Axel Wilhelm Raimund Uhlenberg", "O556653628"));
        users.add(new AvailableUser("Imagina Handt", "D162565242"));
        users.add(new AvailableUser("Phylicia Roedelheim", "I840077704"));
        users.add(new AvailableUser("Eileen Dettmers", "I000685456"));
        users.add(new AvailableUser("Nanette Berkemeier", "O384255994"));
        users.add(new AvailableUser("Kübra Brockdorff", "O354567469"));
        users.add(new AvailableUser("Darius Michael Brian Ubbo Graf von Bödefeld", "X110411675"));
        users.add(new AvailableUser("Prof. Dr. Franz Bruno J. T. VórmwinkelTEST-ONLY", "X110556406"));
        users.add(new AvailableUser("Prof. Dr. Hillary A. U. Gräfin GrundnérTEST-ONLY", "X110593136"));
        users.add(new AvailableUser("Claudette Freifrau Godofsky-WitzigmannTEST-ONLY", "X110581992"));
        users.add(new AvailableUser("Hillary Steffi Gräfin SchölzTEST-ONLY", "X110542925"));
        users.add(new AvailableUser("Xenia Petra Gräfin von Lüdenscheidt-KlöbnerTEST-ONLY", "X110401369"));
        users.add(new AvailableUser("Helmut Thorsten Walter H. Freiherr TínmanTEST-ONLY", "X110467329"));
        users.add(new AvailableUser("Prof. Dr. Vera Maria K. G. Gräfin GodofskyTEST-ONLY", "X110406713"));
        users.add(new AvailableUser("Prof. Dr. Heike Maria BruserTEST-ONLY", "X110485695"));
        users.add(new AvailableUser("Heide Mia Mia Leonie Heide Gräfin CôllinsTEST-ONLY", "X110568831"));
        users.add(new AvailableUser("Waltraut Annika Virginia Gräfin Blôch-BauerTEST-ONLY", "X110503517"));
        users.add(new AvailableUser("Prof. Dr. Tanja G. A. M. J. Gräfin MünchhausenTEST-ONLY", "X110593656"));
        users.add(new AvailableUser("Karla Freifrau Dåmmer-OrstedTEST-ONLY", "X110529195"));
        users.add(new AvailableUser("Lisa Tina Alice Abigail W. Gräfin von BödefeldTEST-ONLY", "X110512264"));
        users.add(new AvailableUser("Dr. Francesco Sigurd Helmut PopówitschTEST-ONLY", "X110430954"));
        users.add(new AvailableUser("Mia Christiane Gabriele A. Gräfin GåndersheimTEST-ONLY", "X110547751"));
        users.add(new AvailableUser("Prof. Dr. Hannelore E. H. F. S. Gräfin SchröderTEST-ONLY", "X110424405"));
        users.add(new AvailableUser("Franz Archibald G. Graf von Heckhäusen-FrankensteinTEST-ONLY", "X110469792"));
        users.add(new AvailableUser("Tamara Annika Maria Tatjana Gräfin GodofskyTEST-ONLY", "X110536695"));
        users.add(new AvailableUser("Prof. Dr. Leni-Paula A. G. A. V. ÖzdemirTEST-ONLY", "X110596703"));
        users.add(new AvailableUser("Dr. Fedilio Ubbo J.-D. HeckhausénTEST-ONLY", "X110591068"));
        users.add(new AvailableUser("Claudette Freifrau Godofsky-WitzigmannTEST-ONLY", "X110581992"));
        users.add(new AvailableUser("Prof. Dr. Maude Gräfin TóboggenTEST-ONLY", "X110417514"));
        users.add(new AvailableUser("Grace Adelheid Andrea T. Gräfin SänderTEST-ONLY", "X110522695"));
        users.add(new AvailableUser("Dr. Lukas CanerTEST-ONLY", "X110503240"));
        users.add(new AvailableUser("Maria Nora Gräfin GroßTEST-ONLY", "X110568591"));
        users.add(new AvailableUser("Lorette Freifrau DüsterbehnTEST-ONLY", "X110574946"));
        users.add(new AvailableUser("Larissa A. T. P. T. DüsterbehnTEST-ONLY", "X110557966"));
        users.add(new AvailableUser("Prof. Dr. Vera Steffi N. L. J. ÖzdemirTEST-ONLY", "X110535489"));
        users.add(new AvailableUser("Dr. Lisa NullmayrTEST-ONLY", "X110573375"));
        users.add(new AvailableUser("Vera Melissa A.-H. A. Gräfin von MüllerTEST-ONLY", "X110591094"));
        users.add(new AvailableUser("Feli Marie-Ella Hanna Freifrau von FrankensteinTEST-ONLY", "X110509256"));
        users.add(new AvailableUser("Johanna Freifrau von und zu Bülow-BogenTEST-ONLY", "X110566484"));
        users.add(new AvailableUser("Benjamin Daniel Freiherr von DoeringTEST-ONLY", "G320916839"));
        users.add(new AvailableUser("Hillary Steffi Gräfin SchölzTEST-ONLY", "X110542925"));
        users.add(new AvailableUser("Brunhild H.M.A.N.Gräfin Godofsky-Witzigmann", "X110557978"));
        users.add(new AvailableUser("Aphrodite Gräfin Popowitsch", "X110562004"));
        users.add(new AvailableUser("Josefine Hanna Virginia Nora Freifrau y Nino Gomez", "X110523432"));
        users.add(new AvailableUser("Sophie Annika Freifrau Doria-Bödefeld", "X110524030"));
        users.add(new AvailableUser("Barney Darius Graf Äppler", "X110535960"));
        users.add(new AvailableUser("Paula Gräfin Müller-Lügenscheidt", "X110519612"));
        users.add(new AvailableUser("Swantje Franziska Gräfin Szczypanskij", "X110528611"));
        users.add(new AvailableUser("Prof. Dr. Lilo Nora Melissa S. N. Klön", "X110550252"));
        users.add(new AvailableUser("Prof. Dr. Felicitas K. K. M. Gräfin von Bödefeld", "X110502743"));
        users.add(new AvailableUser("Xenia Leonie E. T. A. Bruser", "X110555909"));
        users.add(new AvailableUser("Siegfried Freiherr Schürmann", "X110545579"));
        users.add(new AvailableUser("Dr. Ali Roman Waerkelscheim", "X110422110"));
        users.add(new AvailableUser("Prof. Dr. Xaver S. L. A. F. Graf Münchhausen", "X110410368"));
        users.add(new AvailableUser("Dr. Martin F. G. B. E.-A. Côllins", "X110559212"));
        users.add(new AvailableUser("Dr. Max Max Müller-Lügenscheidt", "X110566181"));
        users.add(new AvailableUser("Prof. Dr. Walter Sam Graf Schraßer", "X110582285"));
        users.add(new AvailableUser("Gustav Fedilio Freiherr Dômbrowski", "X110557485"));
        users.add(new AvailableUser("Marie-Ella Grace Sigrid Freifrau FrônkensteinTEST-ONLY", "X110644539"));
        users.add(new AvailableUser("Prof. Dr. Gustav F. B. A. A. SigmuntowskíTEST-ONLY", "X110673896"));
        users.add(new AvailableUser("Adelheid Heike Claudette C. Gräfin JoyceTEST-ONLY", "X110597869"));
        users.add(new AvailableUser("Dr. Tobias Darius Peter MondwürfelTEST-ONLY", "X110648045"));
        users.add(new AvailableUser("Dr. Helmut FränkfürterTEST-ONLY", "X110669052"));
        users.add(new AvailableUser("Prof. Dr. Leonie K. K. X. Gräfin ÖzdemirTEST-ONLY", "X110626759"));
        users.add(new AvailableUser("Karla Gräfin BräuerTEST-ONLY", "X110631987"));
        users.add(new AvailableUser("Torben-Tom Max Graf AngermännTEST-ONLY", "X110601287"));
        users.add(new AvailableUser("Prof. Dr. Annika Steffi Gräfin HubertúsTEST-ONLY", "X110636192"));
        users.add(new AvailableUser("Leonie Lena Waltraut N. F. Freifrau SchölzTEST-ONLY", "X110699776"));
        users.add(new AvailableUser("Katharina Karla Freifrau CördesTEST-ONLY", "X110675321"));
        users.add(new AvailableUser("Robin Robin Simon Freiherr Beutelsbacher-TütenheimTEST-ONLY", "X110599608"));
        users.add(new AvailableUser("Prof. Dr. Waltraut L. B. Gräfin NötherTEST-ONLY", "X110506538"));
        users.add(new AvailableUser("Dr. Lisa Swantje Tina FränkfürterTEST-ONLY", "X110677325"));
        users.add(new AvailableUser("Dr. Elisabeth HünschTEST-ONLY", "X110632775"));
        users.add(new AvailableUser("Prof. Dr. Laura T. M. L. von FrankensteinTEST-ONLY", "X110575469"));
        users.add(new AvailableUser("Prof. Dr. Annemarie S. Gräfin DallmayerTEST-ONLY", "X110549197"));
        users.add(new AvailableUser("Sigurd Robin Torben-Tom Graf SchröderTEST-ONLY", "X110595713"));
        users.add(new AvailableUser("Dr. Adelheid A.-H. BlücherTEST-ONLY", "X110594367"));
        users.add(new AvailableUser("Prof. Dr. Dïmitri J.-A. Düsterbehn-HardenbergshausenTEST-ONLY", "X110666930"));
        users.add(new AvailableUser("Aphrodite Freifrau de BoerTEST-ONLY", "X110680129"));
        users.add(new AvailableUser("Daniel E. J.-D. R. M. Graf d' AgóstinoTEST-ONLY", "X110535933"));
        users.add(new AvailableUser("Larissa Larissa Julia M.-E. Gräfin OldenburgTEST-ONLY", "X110514054"));
        users.add(new AvailableUser("Prof. Dr. Lorette Lisa Maude DômbrowskiTEST-ONLY", "X110668466"));
        users.add(new AvailableUser("Hannelore Gräfin OldenburgTEST-ONLY", "X110683594"));
        users.add(new AvailableUser("Dr. Steffi Adele Lilo Julia JoyceTEST-ONLY", "X110560796"));
        users.add(new AvailableUser("Prof. Dr. Ulrich D. T. J. H. von Lüdenscheidt-KlöbnerTEST-ONLY", "X110576764"));

        AvailableUser defaultUser = new AvailableUser("Darius Michael Brian Ubbo Graf von Bödefeld", "X110411675");
        users.add(defaultUser);

        Collections.sort(users, new Comparator<AvailableUser>(){
            public int compare(AvailableUser obj1, AvailableUser obj2) {
                // ## Ascending order
                return obj1.getName().compareToIgnoreCase(obj2.getName());
            }
        });
        AVAILABLE_USERS = users;
        DEFAULT_USER_INDEX = users.indexOf(defaultUser);
    }
}
